# CI/CD 配置
DOCKER_HUB_ACCOUNT=XXXXXXXX
DOCKER_HUB_TOKEN=XXXXXXXX

# SQLite 資料庫路徑
DATABASE_URL="file:/tmp/aliyundb/db.sqlite"

# 阿里雲 API 設定
ACCESS_KEY_ID=XXXXXXXXXXXXXXXXXXXXXXXXX
ACCESS_KEY_SECRET=XXXXXXXXXXXXXXXXXXXXXXXXXXX
REGION_ID=cn-shanghai
ENDPOINT=ecs.cn-shanghai.aliyuncs.com
CONNECT_TIMEOUT=100000

# 安全設定
X_API_KEY=""
CHECK_HEADERS="cf-connecting-ip;x-forwarded-for;x-real-ip"

# 代理目標設定 (逗號分隔的列表)
PROXY_TARGETS=www.bilibili.com,api.bilibili.com,*.iqiyipic.com,manga.bilibili.com

# 阿里雲 ECS 設定
V_SWITCH_ID=XXXXXXXXXXXXXXXXXXXXXX
SECURITY_GROUP_ID=XXXXXXXXXXXXXXXXXXXXXXXX
INTERNET_MAX_BANDWIDTH_OUT=50
DISK_SIZE=20
DISK_CATEGORY=cloud_efficiency
IMAGE_ID=ubuntu_22_04_x64_20G_alibase_20230907.vhd
INSTANCE_TYPE=ecs.t6-c2m1.large
INTERNET_CHARGE_TYPE=PayByTraffic
INSTANCE_CHARGE_TYPE=PostPaid
CHARGE_PERIOD=1
CHARGE_PERIOD_UNIT=Hourly
SECURITY_STRATEGY=Active
INSTANCE_NAME_PREFIX=Z-

# 阿里雲 ECS 命令執行配置
COMMAND_TYPE=RunShellScript
COMMAND_WORKING_DIR=/root/
COMMAND_REPEAT_MODE=Once
COMMAND_CONTENT_ENCODING=PlainText
COMMAND_TIMEOUT=600
COMMAND_INITIAL_WAIT_TIME=1000
COMMAND_POLLING_WAIT_TIME=5000

# 安全組規則配置
TCP_UDP_PORT_RANGE=1/65535
ICMP_PORT_RANGE=-1/-1

# 服務本身如果有依賴私有 Docker registry 設定
DOCKER_REGISTRY_USERNAME="XXXXXXXXX"
DOCKER_REGISTRY_PASSWORD="XXXXXXXXX"
DOCKER_REGISTRY="XXXXXXXXX"

# 定時任務設定
ENABLE_FORCE_CLEAR="true"
FORCE_CLEAR_TIME="0 4 * * *"
FORCE_CLEAR_TIMEZONE="Asia/Taipei"

# 日誌設定
LOG_MIN_LEVEL="INFO"           # 最低日誌級別: DEBUG, INFO, WARN, ERROR
LOG_DISABLE_DEBUG_IN_PROD="true"  # 是否在生產環境中禁用 DEBUG 級別的日誌
LOG_INCLUDE_TIMESTAMP="true"    # 是否包含時間戳
LOG_INCLUDE_LEVEL="true"        # 是否包含日誌級別
LOG_INCLUDE_MODULE="true"       # 是否包含模塊名稱
LOG_FORMAT_OBJECTS="true"       # 是否格式化對象

# 安裝步驟相關設定 (以下為示例，可根據需要修改)
# Docker 安裝步驟 (JSON 格式的字符串數組)
# DOCKER_INSTALL_STEPS='["sudo apt-get update", "sudo apt-get -y install ca-certificates curl gnupg", "sudo install -m 0755 -d /etc/apt/keyrings", "sudo rm -rf /etc/apt/keyrings/docker.gpg", "curl -fsSL http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo gpg --batch --dearmor -o /etc/apt/keyrings/docker.gpg", "sudo chmod a+r /etc/apt/keyrings/docker.gpg", "echo \"deb [arch=\"$(dpkg --print-architecture)\" signed-by=/etc/apt/keyrings/docker.gpg] http://mirrors.aliyun.com/docker-ce/linux/ubuntu \"$(. /etc/os-release && echo \"$VERSION_CODENAME\")\" stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null", "sudo apt-get update", "sudo apt-get -y install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin"]'
# Docker 檢查命令
# DOCKER_CHECK_COMMAND="docker --version"

# Socks5 安裝步驟 (JSON 格式的字符串數組)
# SOCKS_INSTALL_STEPS='["docker pull registry.cn-shanghai.aliyuncs.com/pry/socks5:latest", "sudo docker run --rm -d --name socks5 -p 1080:1080 registry.cn-shanghai.aliyuncs.com/pry/socks5:latest"]'
# Socks5 檢查命令模板 (使用 {ip} 作為 IP 地址的佔位符)
# SOCKS_CHECK_COMMAND_TEMPLATE="curl -s --socks5 http://{ip}:1080 http://ifcfg.co"

# VPN 安裝步驟 (JSON 格式的字符串數組，使用 {psk}, {user}, {password} 作為佔位符)
# VPN_INSTALL_STEPS='["docker pull registry.cn-shanghai.aliyuncs.com/pry/vpn:latest", "rm -rf /tmp/vpn.env", "touch /tmp/vpn.env", "echo '\''VPN_IPSEC_PSK={psk}'\'' >> /tmp/vpn.env", "echo '\''VPN_USER={user}'\'' >> /tmp/vpn.env", "echo '\''VPN_PASSWORD={password}'\'' >> /tmp/vpn.env", "sudo docker run --name ipsec-vpn-server --env-file /tmp/vpn.env -p 500:500/udp -p 4500:4500/udp -d --rm --privileged registry.cn-shanghai.aliyuncs.com/pry/vpn:latest"]'